<?xml version="1.0" ?>
<!-- Copyright (c) 2016 The UUV Simulator Authors.
     All rights reserved.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<sdf version="1.5">
  <world name="empty_underwater">
    <physics name="default_physics" default="true" type="ode">
      <max_step_size>0.002</max_step_size>
      <real_time_factor>1</real_time_factor>
      <real_time_update_rate>500</real_time_update_rate>
      <!--<ode>
        <solver>
          <type>quick</type>
          <iters>50</iters>
          <sor>0.5</sor>
        </solver>
      </ode>-->
    </physics>
    <scene>
      <ambient>0.01 0.01 0.01 1.0</ambient>
      <sky>
        <clouds>
          <speed>12</speed>
        </clouds>
      </sky>
      <!--toggle for either showing or hiding shadows-->
      <shadows>0</shadows>
      
      <!--The main source behind the "turbid" effect achieved by Ogre for the underwater world.
          Note that it does NOT render an actual fog object into the scene. Just an illusion for the ViewPort or camera-->
      <fog>
        <color>0.1 0.2 0.3 1.0</color>
        <type>linear</type>
        <density>0.3</density>
        <start>1</start>
        <end>50</end>
      </fog>
    </scene>

    <!-- Origin placed somewhere in the middle of the North Sea  -->
    <spherical_coordinates>
      <latitude_deg>56.71897669633431</latitude_deg>
      <longitude_deg>3.515625</longitude_deg>
    </spherical_coordinates>

    <!-- Global light source. Default for empty_world. 
    <include>
      <uri>model://sun</uri>
    </include> 
    -->

    
    <light type="directional" name="sun_diffuse_1">
      <pose>-100 500 -20 0 0 0</pose>
      <diffuse>0.8 0.8 0.8 1</diffuse>
      <specular>1 1 1 1</specular>
      <direction>-1 -1 0</direction>
      <cast_shadows>true</cast_shadows>
    </light>

    <light type="directional" name="sun_diffuse_2">
      <pose>100 50 20 0 0 0</pose>
      <diffuse>0.6 0.6 0.6 1</diffuse>
      <specular>0 0 0 1</specular>
      <direction>-0.3 -0.3 -1</direction>
      <cast_shadows>true</cast_shadows>
    </light>

    <light type="directional" name="sun_diffuse_3">
      <pose>-150 -130 50 0 0 0</pose>
      <diffuse>0.6 0.6 0.6 1</diffuse>
      <specular>0.2 0.2 0.2 1</specular>
      <direction>0.5 0.5 -1</direction>
      <cast_shadows>true</cast_shadows>
    </light>
    


    <!-- Bounding box with sea surface -->
    <include>
      <uri>model://test_herkules_seabed</uri>
      <pose>0 0 0 0 0 0</pose>
    </include>

    <include>
      <uri>model://bop_panel</uri>
      <pose>15 0 -59 0 0 0</pose>
    </include>

    <!--include>
      <uri>model://world_camera</uri>
      <pose>0 0 0 0 -90 0</pose>
    </include>

    <joint name="camera_joint_world" type="fixed">
      <parent>world</parent>
      <child>world_camera::link</child>
    </joint-->

    <model name="world_camera_top">
      <static>true</static>
      <pose>15 0 -25 0 1.57 0</pose>
      <link name="world_cam_link">
        <visual name="vis">
          <geometry>
            <box>
              <size>0.1 0.1 0.1</size>
            </box>
          </geometry>
        </visual>
        <sensor type="camera" name="world_camera">
          <update_rate>60.0</update_rate>
          <camera name="world_camera">
          <horizontal_fov>1.7</horizontal_fov>
          <image>
            <width>800</width>
            <height>600</height>
            <format>R8G8B8</format>
          </image>
          <clip>
              <near>0.05</near>
              <far>3000</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.001</stddev>
          </noise>
          </camera>
          <plugin name="world_cam_controller" filename="libgazebo_ros_camera.so">
            <updateRate>0.0</updateRate>
            <cameraName>world/world_camera_top</cameraName>
            <!--frameName>camera${suffix}_link_optical</frameName-->
            

            <attenuationR>0.0</attenuationR>
            <attenuationG>0.0</attenuationG>
            <attenuationB>0.0</attenuationB>

            <backgroundR>0</backgroundR>
            <backgroundG>0</backgroundG>
            <backgroundB>0</backgroundB>

            <!-- required for ros depth cam -->
            <imageTopicName>/world_camera_image</imageTopicName>
            <cameraInfoTopicName>world_camera_info</cameraInfoTopicName>
            <pointCloudCutoff>10.0</pointCloudCutoff>
          </plugin>
        </sensor>
      </link>
    </model>
    
    <plugin name="underwater_current_plugin" filename="libuuv_underwater_current_ros_plugin.so">
      <namespace>hydrodynamics</namespace>
      <constant_current>
        <topic>current_velocity</topic>
        <velocity>
          <mean>0</mean>
          <min>0</min>
          <max>5</max>
          <mu>0.0</mu>
          <noiseAmp>0.0</noiseAmp>
        </velocity>

        <horizontal_angle>
          <mean>0</mean>
          <min>-3.141592653589793238</min>
          <max>3.141592653589793238</max>
          <mu>0.0</mu>
          <noiseAmp>0.0</noiseAmp>
        </horizontal_angle>

        <vertical_angle>
          <mean>0</mean>
          <min>-3.141592653589793238</min>
          <max>3.141592653589793238</max>
          <mu>0.0</mu>
          <noiseAmp>0.0</noiseAmp>
        </vertical_angle>
      </constant_current>
    </plugin>

    <plugin name="sc_interface" filename="libuuv_sc_ros_interface_plugin.so"/>
    <gui fullscreen='0'>
      <camera name='user_camera'>
        <pose frame=''>-25 25 -55 0 0 -0.8</pose>
        <view_controller>orbit</view_controller>
        <projection_type>perspective</projection_type>
      </camera>
    </gui>
  </world>
</sdf>
